{"version":3,"file":"bundled7a530e65005ef638fac.js","mappings":";;;;;;;;;;;;;;AAAA,SAASA,iBAAiB,GAAG;EAC3B,OAAO,gCAAgC;AACzC;AAEA,iEAAeA,iBAAiB;;;;;;;;;;;;;;;;UCJhC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;ACfgD;AACZ;;AAGpC;AACA;;AAEA,IAAME,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;AAElDF,OAAO,CAACG,gBAAgB,CAAC,OAAO,EAAEL,sDAAiB,CAAC;AAEpDA,0DAAiB,EAAE;AACnB,gC","sources":["webpack://walletconnect/./src/walletconnect.js","webpack://walletconnect/webpack/bootstrap","webpack://walletconnect/webpack/runtime/define property getters","webpack://walletconnect/webpack/runtime/global","webpack://walletconnect/webpack/runtime/hasOwnProperty shorthand","webpack://walletconnect/webpack/runtime/make namespace object","webpack://walletconnect/webpack/runtime/publicPath","webpack://walletconnect/./src/index.js"],"sourcesContent":["function WalletConnectTest() {\n  return \"this is just some random jokes\";\n}\n\nexport default WalletConnectTest;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import WalletConnectTest from \"./walletconnect\";\nimport logo from './assets/logo.png'\n\n\n// const logoImg = document.getElementById(\"logoImg\"); way to get an html id and attach an attribute to it from js\n// logoImg.src = logo\n\nconst clicked = document.getElementById(\"newsbtn\");\n\nclicked.addEventListener('click', WalletConnectTest) \n\nWalletConnectTest();\n// console.log(\"this is a test\")"],"names":["WalletConnectTest","logo","clicked","document","getElementById","addEventListener"],"sourceRoot":""}