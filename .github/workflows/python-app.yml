# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: 'Create and update env file'
      run: |
          touch .env
          
          echo REDIS_TLS_URL="http://127.0.0.1:8000" >> .env
          echo PROTOCOL_COMMISSION = 0.3 >> .env
          echo GENERAL_TRANSACTION_FEE = 200 >> .env
          echo SECRET_KEY="secret key" >> .env
          echo DJANGO_DEBUG=False >> .env
          echo DB_ENGINE="sqlite3" >> .env
          echo DB_NAME="db.sqlite3" >> .env
          echo DB_USER="" >> .env
          echo DB_PASSWORD='' >> .env
          echo DB_HOST='' >> .env
          echo DB_PORT='' >> .env
          
           
          echo APP_SECRET="this_is_a_test_secrets" >> .env
          echo PROTOCOL_SIGNER = "SDCU62IQ37T2XJDPE3S36PKMIYCN24QIAYKOMUE6PZZ7RZZZ3ESC5QQN" >> .env
          echo SENTIT_DBUSER_HEROKU ="" >> .env
          echo SENTIT_DBUSER_PASSWORD ="" >> .env

          echo NETWORK_TYPE = "Testnet" >> .env
          echo BROKER_URL = "redis://localhost:6379" >> .env

          echo TRANSACTION_CREDIT ="SDCU62IQ37T2XJDPE3S36PKMIYCN24QIAYKOMUE6PZZ7RZZZ3ESC5QQN" >> .env
          echo TRANSACTION_DEBIT = "SDCU62IQ37T2XJDPE3S36PKMIYCN24QIAYKOMUE6PZZ7RZZZ3ESC5QQN" >> .env
          echo SPONSORING_ACCT = "SDCU62IQ37T2XJDPE3S36PKMIYCN24QIAYKOMUE6PZZ7RZZZ3ESC5QQN" >> .env
          echo BILL_PAYMENT_ACCT = "SDCU62IQ37T2XJDPE3S36PKMIYCN24QIAYKOMUE6PZZ7RZZZ3ESC5QQN" >> .env
          echo NETWORK_TYPE = "Testnet" >> .env
          echo DB_URI="mysql+pymysql://root:@localhost/testing" >> .env


          echo BILL_PAY_PASSWORD="Test_bill_password" >> .env
          echo BILL_PAY_EMAIL="Test_bill_email" >> .env
          cat .env
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
          python -m unittest discover
